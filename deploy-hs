#!/bin/sh

# ensure docker is version 1.3.0 or greater

DOCKER_VERSION=$(docker version | grep "Client version" | tr -s ' ' | cut -d ' ' -f 3)
if [[ $DOCKER_VERSION < "1.3.0" ]]; then
    echo "Please install Docker version 1.3.0 or greater to use this script"
    exit;
fi

# get submodules
echo "### get git submodules ###"
git submodule init && git submodule update

# build hs_base if it does not exist
IMAGE_ID=$(docker images | grep hs_base | tr -s ' ' | cut -d ' ' -f 3)
if [ -z $IMAGE_ID ];
    then
        echo "### pull hs_base image from docker hub ###"
        docker pull mjstealey/hs_base;
    else
        echo "### hs_base already exists ###";
fi

# build docker contaiers defined by fig and bring them up
echo "### build docker containers as defined in fig.yml ###"
fig build
echo "### bring up all docker containers as defined in fig.yml ###"
fig up -d

# load pg.development.sql into postgis database
echo "### load clean pg.development.sql database from the running hydroshare container ###"
CONTAINER_ID=$(docker ps -a | grep hydroshare_hydroshare_1 | cut -d ' ' -f 1)
docker exec $CONTAINER_ID dropdb -U postgres -h postgis postgres
docker exec $CONTAINER_ID createdb -U postgres -h postgis postgres
docker exec $CONTAINER_ID psql -U postgres -h postgis -w -c 'create extension postgis;'
docker exec $CONTAINER_ID psql -U postgres -h postgis -f pg.development.sql
docker exec $CONTAINER_ID python manage.py makemigrations
docker exec $CONTAINER_ID python manage.py migrate

echo "### complete ###"